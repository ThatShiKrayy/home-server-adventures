# CONFIGURATION VARIABLES - I highly recommend a secondary account for use with containers. If you're just getting started and only running locally, it doesn't matter. If you're exposing any container to the internet, having an app accessible to the internet managed by a local account with root access is asking for trouble. 
PUID=1001 #1001 is the id for my local media account. media is a standard account without administrative controls. Enter 'id -u <username>' in your terminal to confirm the UID. 
PGID=1001 #1001 is the id for my local media group. 
TZ=America/Chicago
# PATH VARIABLES - This is security by obfuscation. Sure, not all that reliable, but we don't have to make it easy to be breached. 
DATADIR=/data/media
USERDIR=/home/media
DOCKERDIR=/home/media/docker
DOWNDIR=/home/media/downloads
APPDIR=/home/media/docker/appdata
LOGDIR=/home/media/docker/logs/homeserver
OTHER=homeserver/OTHER
MEDIA=homeserver/MEDIA
PVRS=homeserver/PVRS
DOWNLOADERS=homeserver/DOWNLOADERS
DATABASE=homeserver/DATABASE
PROXY=homeserver/PROXY
LOGGING=homeserver/LOGGING
SERVICES=homeserver/SERVICES
UTILITY=homeserver/UTILITY
# NETWORKING VARIABLES
HOSTNAME=homeserver
SERVER_IP=1.1.1.1 #This is your servers local IP address. Typical 192.168.x.x. 
DOMAINNAME= #Enter your domain name. Traefik will create a wildcard certificate for your domain to support *.DOMAIN.us
DOMAINNAME_1= #Same as above. Duplicate variable 
DOMAINNAME_2= # If you have multiple domains, enter it here. If not, comment/remove out the variable.
LOCAL_IPS=127.0.0.1/32,10.0.0.0/8,192.168.50.0/24,172.16.0.0/12 # These are for your locai IP addresses. There is assumed trust here, so tread carefully. 
CLOUDFLARE_IPS=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
DOCKER_HOST=tcp://socket-proxy:2375 # This is a global variable to declare socket-proxy as the interface for communicating with the Docker Sock. 
# SECRETS -- Securely passing passwords to containers. These files are stored under root ownership with 400 permissions. Group and other has no permissions. I really need to clean these up since a lot of them are no longer in use. 
RADARR_API_KEY=/run/secrets/radarr_api
SONARR_API_KEY=/run/secrets/sonarr_api
CROWDSEC_BOUNCER_TRAEFIK_API_KEY=/run/secrets/traefik_crowdsec_api
CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns_api_token
TRAEFIK_CROWDSEC_API=/run/secrets/traefik_crowdsec_api
HOMEPAGE_FILE_PLEX=/run/secrets/plex_token
PROWLARR_API_KEY=/run/secrets/prowlarr_api
SABNZBD_API_KEY=/run/secrets/sabnzbd_api
LIDARR_API_KEY=/run/secrets/lidarr_api
CROWDSEC_LAPI_KEY=/run/secrets/crowdsec_lapi_key
CF_BOUNCER_KEY=/run/secrets/cf_bouncer_token
CF_BOUNCER_API=/run/secrets/cf_bouncer_API
ROMM_AUTH_SECRET_KEY=/run/secrets/romm_auth_secret_key
IGDB_CLIENT_ID=/run/secrets/igdb_client_id
IGDB_CLIENT_SECRET=/run/secrets/igdb_client_secret
MARIADB_ROMM_PASSWORD=/run/secrets/mariadb_romm_password
MARIADB_ROOT_PASSWORD=/run/secrets/mariadb_root_password
ACCESS_TOKEN_SECRET=/run/secrets/access_token_secret
MARIADB_WALLABAG_PASSWORD=/run/secrets/mariadb_wallabag_password
ADGUARD_PASSWORD=/run/secrets/adguard_password
OPENAI_MEALIE_KEY=/run/secrets/openai_mealie_key
DBGATE_PASSWORD=/run/secrets/dbgate_password
GOOGLE_SEARCH_API_KEY=/run/secrets/google_search_api
CREDS_KEY=/run/secrets/creds_key
CREDS_IV=/run/secrets/creds_iv
MEILI_MASTER_KEY=/run/secrets/meili_master_key
JWT_SECRET_KEY=/run/secrets/jwt_secret_key
JWT_REFRESH_SECRET=/run/secrets/refresh_token_secret
REFRESH_TOKEN_SECRET=/run/secrets/refresh_token_secret
POSTGRES_PASSWORD=/run/secrets/postgres_password
POSTGRES_LIBRECHAT_USER=/run/secrets/postgres_librechat_user
POSTGRES_LIBRECHAT_PASSWORD=/run/secrets/postgres_librechat_password
#### Obsidian Live Sync
OBSIDIAN_PW= # CouchDB does not support Docker Secrets...plaintext, unfortunately..